---
- hosts: all
  become: true
  vars:
    create_containers: 3
    default_container_name: Amongus-Todo
    default_container_image: james1122/amongus-todo:latest
    default_container_command: sleep 1d

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        tag : latest
        source: pull

    # - name: Create default containers
    #   docker_container:
    #     name: "{{ default_container_name }}{{ item }}"
    #     image: "{{ default_container_image }}"
    #     command: "{{ default_container_command }}"
    #     state: present
    #   with_sequence: count={{ create_containers }}

    # - name: Remove Docker Containers
    #   shell: |                    # Multiple commands in Ansible shell module
    #       docker rm -f $(docker ps -aq)
    #   args: 
    #       executable: /bin/bash # Run ls in the Bash shell

    - name: Remove Docker Containers
      shell: |                    # Multiple commands in Ansible shell module
          if [ "$(docker ps -q -f name={{ default_container_name }}{{ item }})" ]; then \
            docker rm -f $(docker ps -a | grep "{{ default_container_name }}{{ item }}") \
          fi
      args: 
          executable: /bin/bash # Run ls in the Bash shell
      with_sequence: count={{ create_containers }}

    - name: Run docker container
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        state: started
        exposed_ports:
        - "808{{item}}"
        ports:
        - "808{{ item }}:3000"
        # volumes:
        # - /root/webpage/:/usr/local/apache2/htdocs/
      with_sequence: count={{ create_containers }}